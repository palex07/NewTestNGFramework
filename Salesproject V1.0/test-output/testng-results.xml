<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="10" passed="7" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-17T10:47:31 IST" name="Suite" finished-at="2020-02-17T10:47:32 IST" duration-ms="1007">
    <groups>
    </groups>
    <test started-at="2020-02-17T10:47:31 IST" name="Test" finished-at="2020-02-17T10:47:32 IST" duration-ms="1007">
      <class name="ExtentReport.Extent01">
        <test-method is-config="true" signature="setReport()[pri:0, instance:ExtentReport.Extent01@4da4253]" started-at="2020-02-17T10:47:31 IST" name="setReport" finished-at="2020-02-17T10:47:31 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReport -->
        <test-method signature="Isskip()[pri:0, instance:ExtentReport.Extent01@4da4253]" started-at="2020-02-17T10:47:32 IST" name="Isskip" finished-at="2020-02-17T10:47:32 IST" duration-ms="0" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the TC]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the TC
at ExtentReport.Extent01.Isskip(Extent01.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Isskip -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:ExtentReport.Extent01@4da4253]" started-at="2020-02-17T10:47:32 IST" name="tearDown" finished-at="2020-02-17T10:47:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Isskip status=SKIP method=Extent01.Isskip()[pri:0, instance:ExtentReport.Extent01@4da4253] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:ExtentReport.Extent01@4da4253]" started-at="2020-02-17T10:47:32 IST" name="tearDown" finished-at="2020-02-17T10:47:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Regression status=FAILURE method=Extent01.Regression()[pri:0, instance:ExtentReport.Extent01@4da4253] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="doLogin()[pri:0, instance:ExtentReport.Extent01@4da4253]" started-at="2020-02-17T10:47:32 IST" name="doLogin" finished-at="2020-02-17T10:47:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method signature="Regression()[pri:0, instance:ExtentReport.Extent01@4da4253]" started-at="2020-02-17T10:47:32 IST" name="Regression" finished-at="2020-02-17T10:47:32 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ Regression failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  Regression failed
at org.testng.Assert.fail(Assert.java:97)
at ExtentReport.Extent01.Regression(Extent01.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Regression -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:ExtentReport.Extent01@4da4253]" started-at="2020-02-17T10:47:32 IST" name="endReport" finished-at="2020-02-17T10:47:32 IST" duration-ms="455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:ExtentReport.Extent01@4da4253]" started-at="2020-02-17T10:47:32 IST" name="tearDown" finished-at="2020-02-17T10:47:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doLogin status=SUCCESS method=Extent01.doLogin()[pri:0, instance:ExtentReport.Extent01@4da4253] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ExtentReport.Extent01 -->
      <class name="com.ATTADMSales.salesproject.Sales02">
        <test-method signature="testff01()[pri:0, instance:com.ATTADMSales.salesproject.Sales02@3972a855]" started-at="2020-02-17T10:47:31 IST" name="testff01" finished-at="2020-02-17T10:47:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testff01 -->
        <test-method signature="testff()[pri:0, instance:com.ATTADMSales.salesproject.Sales02@3972a855]" started-at="2020-02-17T10:47:31 IST" name="testff" finished-at="2020-02-17T10:47:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testff -->
        <test-method signature="testff02()[pri:0, instance:com.ATTADMSales.salesproject.Sales02@3972a855]" started-at="2020-02-17T10:47:31 IST" name="testff02" finished-at="2020-02-17T10:47:32 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testff02 -->
      </class> <!-- com.ATTADMSales.salesproject.Sales02 -->
      <class name="com.ATTADMSales.salesproject.Sales01">
        <test-method is-config="true" signature="initsetup()[pri:0, instance:com.ATTADMSales.salesproject.Sales01@865dd6]" started-at="2020-02-17T10:47:31 IST" name="initsetup" finished-at="2020-02-17T10:47:31 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initsetup -->
        <test-method signature="testff()[pri:0, instance:com.ATTADMSales.salesproject.Sales01@865dd6]" started-at="2020-02-17T10:47:31 IST" name="testff" finished-at="2020-02-17T10:47:31 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testff -->
        <test-method signature="testff01()[pri:0, instance:com.ATTADMSales.salesproject.Sales01@865dd6]" started-at="2020-02-17T10:47:31 IST" name="testff01" finished-at="2020-02-17T10:47:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testff01 -->
        <test-method signature="testff02()[pri:0, instance:com.ATTADMSales.salesproject.Sales01@865dd6]" started-at="2020-02-17T10:47:31 IST" name="testff02" finished-at="2020-02-17T10:47:31 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testff02 -->
      </class> <!-- com.ATTADMSales.salesproject.Sales01 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
